{"version":3,"sources":["score/Score.js","cell/Cell.js","maze/Maze.js","App.js","index.js"],"names":["Score","_jsx","className","children","Cell","props","id","type","blue","purple","color","_useState","useState","_useState2","_slicedToArray","bgColor","setBgColor","onClick","style","background","Maze","rows","columns","cellsIds","_toConsumableArray","Array","keys","cells","length","emptyCells","push","appleId","Math","floor","random","map","n","App","cssVariables","cellSize","_jsxs","element","document","getElementById","ReactDOM","createRoot","render","React","StrictMode"],"mappings":"mRAUeA,MARf,WACE,OACEC,cAAA,OAAKC,UAAU,QAAOC,SACpBF,cAAA,OAAAE,SAAK,gBAGX,E,oBCsCeC,MA3Cf,SAAcC,GACZ,IAAMC,EAAKD,EAAMC,GACXC,EAAOF,EAAME,KAEfC,EAAO,UACPC,EAAS,UAITC,EAAQF,EAEZ,OAAQD,GACN,KAAK,EAYL,QACEG,EAAQF,QAVV,KAAK,EACHE,EAAQD,EACR,MACF,KAAK,EACHC,EAbM,UAcN,MACF,KAAK,EACHA,EAfQ,UAqBZ,IAAAC,EAA8BC,mBAASF,GAAMG,EAAAC,YAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAQ1B,OACEZ,cAAA,OAAKC,UAAU,OAAOe,QAPJ,WACdF,IAAYN,GACdO,EAAWR,EAEf,EAG8CU,MAAO,CAAEC,WAAYJ,GAAUZ,SACxEG,GAGP,E,MCVec,MA/Bf,SAAcf,GAMZ,IALA,IAAMgB,EAAOhB,EAAMgB,KACbC,EAAUjB,EAAMiB,QAEhBC,EAAQC,YAAOC,MAAMJ,EAAOC,GAASI,QACrCC,EAAQ,GACLrB,EAAK,EAAGA,EAAKiB,EAASK,OAAQtB,IACrCqB,EAAMrB,GAAM,EAId,IADA,IAAIuB,EAAa,GACRvB,EAAK,EAAGA,EAAKiB,EAASK,OAAQtB,IACnB,IAAdqB,EAAMrB,IACRuB,EAAWC,KAAKxB,GAGpB,GAA0B,IAAtBuB,EAAWD,OAAc,CAC3B,IACIG,EAAUF,EADIG,KAAKC,MAAMD,KAAKE,SAAWL,EAAWD,SAExDD,EAAMI,GAAW,CACnB,CAEA,OACE9B,cAAA,OAAKC,UAAU,OAAMC,SAClBoB,EAASY,KAAI,SAACC,GAAC,OACdnC,cAACG,EAAI,CAASE,GAAI8B,EAAG7B,KAAMoB,EAAMS,IAAtBA,EAAiC,KAIpD,ECTeC,MAnBf,WACE,IAIMC,EAAe,CACnB,SALW,EAMX,YALc,GAMd,aAAcC,SAGhB,OACEC,eAAA,OAAKtC,UAAU,MAAMgB,MAAOoB,EAAanC,SAAA,CACvCF,cAACD,EAAK,IACNC,cAACmB,EAAI,CAACC,KAbG,EAaSC,QAZN,OAelB,EChBMmB,EAAUC,SAASC,eAAe,QAC3BC,IAASC,WAAWJ,GAE5BK,OACH7C,cAAC8C,IAAMC,WAAU,CAAA7C,SACfF,cAACoC,EAAG,M","file":"static/js/main.60445922.chunk.js","sourcesContent":["import \"./Score.css\";\n\nfunction Score() {\n  return (\n    <div className=\"Score\">\n      <div>SCORE = 42</div>\n    </div>\n  );\n}\n\nexport default Score;\n","import { useState } from \"react\";\nimport \"./Cell.css\";\n\nfunction Cell(props) {\n  const id = props.id;\n  const type = props.type;\n\n  let blue = \"#aabdf6\";\n  let purple = \"#A020F0\";\n  let red = \"#e95353\";\n  let green = \"#79f357\";\n\n  let color = blue;\n\n  switch (type) {\n    case 0:\n      color = blue;\n      break;\n    case 1:\n      color = purple;\n      break;\n    case 2:\n      color = red;\n      break;\n    case 3:\n      color = green;\n      break;\n    default:\n      color = blue;\n  }\n\n  const [bgColor, setBgColor] = useState(color);\n\n  const changeColor = () => {\n    if (bgColor === purple) {\n      setBgColor(blue);\n    }\n  };\n\n  return (\n    <div className=\"Cell\" onClick={changeColor} style={{ background: bgColor }}>\n      {id}\n    </div>\n  );\n}\n\nexport default Cell;\n","import Cell from \"../cell/Cell\";\nimport \"./Maze.css\";\n\nfunction Maze(props) {\n  const rows = props.rows;\n  const columns = props.columns;\n\n  const cellsIds = [...Array(rows * columns).keys()];\n  const cells = [];\n  for (let id = 0; id < cellsIds.length; id++) {\n    cells[id] = 0;\n  }\n\n  let emptyCells = [];\n  for (let id = 0; id < cellsIds.length; id++) {\n    if (cells[id] === 0) {\n      emptyCells.push(id);\n    }\n  }\n  if (emptyCells.length !== 0) {\n    let randomIndex = Math.floor(Math.random() * emptyCells.length);\n    let appleId = emptyCells[randomIndex];\n    cells[appleId] = 2;\n  }\n\n  return (\n    <div className=\"Maze\">\n      {cellsIds.map((n) => (\n        <Cell key={n} id={n} type={cells[n]}></Cell>\n      ))}\n    </div>\n  );\n}\n\nexport default Maze;\n","import \"./App.css\";\nimport Score from \"./score/Score\";\nimport Maze from \"./maze/Maze\";\n\nfunction App() {\n  const rows = 5;\n  const columns = 10;\n  const cellSize = 120;\n\n  const cssVariables = {\n    \"--rows\": rows,\n    \"--columns\": columns,\n    \"--cellSize\": cellSize + \"px\",\n  };\n\n  return (\n    <div className=\"App\" style={cssVariables}>\n      <Score></Score>\n      <Maze rows={rows} columns={columns}></Maze>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst element = document.getElementById(\"root\");\nconst root = ReactDOM.createRoot(element);\n\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}